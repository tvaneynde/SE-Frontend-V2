name: Frontend CI

on:
  push:
    branches:
      - main # Run on pushes to main branch

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read # Allow read access to repository contents
      packages: write # Allow writing to GitHub Packages

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build Next.js standalone app
        run: |
          npm run build
          # Copy public and static assets to standalone folder
          cp -r public .next/standalone/public
          cp -r .next/static .next/standalone/.next/static

      - name: Verify standalone app starts
        run: |
          node .next/standalone/server.js &
          sleep 10
          # Optionally, add curl or other checks here to verify the app responds

      - name: Configure npm for GitHub Packages
        run: |
          echo "@tvaneynde:registry=https://npm.pkg.github.com/" > ~/.npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> ~/.npmrc

      - name: Delete previous package version 0.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO_OWNER: tvaneynde
          REPO_NAME: SE-Frontend-V2
          PACKAGE_NAME: se-frontend
          PACKAGE_TYPE: npm
          VERSION: "0.0.1"
        run: |
          echo "Getting package versions..."
          PACKAGE_VERSIONS=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/orgs/$REPO_OWNER/packages/$PACKAGE_TYPE/$PACKAGE_NAME/versions")

          # Extract the ID of the version 0.0.1
          VERSION_ID=$(echo "$PACKAGE_VERSIONS" | jq -r ".[] | select(.name == \"$VERSION\") | .id")

          if [ -n "$VERSION_ID" ]; then
            echo "Deleting package version ID: $VERSION_ID"
            curl -X DELETE -H "Authorization: Bearer $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github+json" \
              "https://api.github.com/orgs/$REPO_OWNER/packages/$PACKAGE_TYPE/$PACKAGE_NAME/versions/$VERSION_ID"
            echo "Deleted version $VERSION"
          else
            echo "No previous version $VERSION found"
          fi

      - name: Publish package to GitHub Packages
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
